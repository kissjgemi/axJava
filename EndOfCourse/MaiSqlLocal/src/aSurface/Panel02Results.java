/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aSurface;

import static aBasis.Global.*;
import aControl.Control;
import java.awt.Component;
import java.awt.Dimension;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author b6dmin
 */
public class Panel02Results extends javax.swing.JPanel {

    class MyCellRenderer extends DefaultListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (index % 2 == 0) {
                setBackground(BGCOLOR1);
                setForeground(COLOR1);
            } else {
                setBackground(BGCOLOR2);
                setForeground(COLOR2);
            }
            setOpaque(true); // otherwise, it's transparent
            return this;  // DefaultListCellRenderer derived from JLabel, DefaultListCellRenderer.getListCellRendererComponent returns this as well.
        }
    }
    private Control c;

    public void setControl(Control c) {
        this.c = c;
    }

    public void setup() {
        System.out.println("Panel02 ResultsPanel: "
                + this.getWidth() + "x" + this.getHeight());
        clearResults();
    }

    public void clearResults() {
        resultsModel.removeAllElements();
        resultsModel.addElement(RESULTS_TEXT);
    }

    public int resultsPanelWidth() {
        return this.getWidth();
    }

    public int resultsPanelHeight() {
        return this.getHeight();
    }

    private final DefaultListModel<String> resultsModel;

    /**
     * Creates new form ResultsPanel
     */
    public Panel02Results() {
        System.out.println("Panel02 ResultsPanel()");
        this.resultsModel = new DefaultListModel<>();
        initComponents();
        super.setPreferredSize(new Dimension(RESULTS_WIDTH, RESULTS_HEIGHT));
        lstResults.setModel(resultsModel);
    }

    public void fillResults(List<String> list) {
        resultsModel.clear();
        list.forEach((str) -> {
            resultsModel.addElement(str);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        lstResults = new javax.swing.JList<>();

        setLayout(new java.awt.BorderLayout());

        lstResults.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Selected Field" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstResults.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstResults.setCellRenderer(new MyCellRenderer()
        );
        jScrollPane2.setViewportView(lstResults);

        add(jScrollPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstResults;
    // End of variables declaration//GEN-END:variables
}
