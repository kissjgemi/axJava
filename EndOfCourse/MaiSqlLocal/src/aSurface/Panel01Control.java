/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aSurface;

import static aBasis.Global.*;
import aControl.Control;
import java.awt.Dimension;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author b6dmin
 */
public class Panel01Control extends javax.swing.JPanel {

    private Control c;

    public void setControl(Control c) {
        this.c = c;
    }

    public void setup() {
        System.out.println("Panel01 ControlPanel: "
                + this.getWidth() + "x" + this.getHeight());
        setButtonActivity(false);
        btnShowConnection.setText(CONTROL_BTN_CONNECTION_INFO);
    }

    public int controlPanelWidth() {
        return this.getWidth();
    }

    public int controlPanelHeight() {
        return this.getHeight();
    }

    public void setButtonActivity(boolean connected) {
        if (connected) {
            lblConnectionAvatar.setIcon(ACTOR2);
            btnConnectAsRoot.setText(CONTROL_BTN_CONNECT_TRUE);
        } else {
            lblConnectionAvatar.setIcon(ACTOR1);
            btnConnectAsRoot.setText(CONTROL_BTN_CONNECT_FALSE);
            setcomboDatabasesActivity(connected);
            initDatabasesModel();
            setcomboTablesActivity(connected);
            initTablesModel();
            comboFieldsInTheTable.setEnabled(connected);
            initFieldsModel();
            setcomboFieldsActivity(connected);
            initPropertiesModel();
        }
        btnShowConnection.setEnabled(connected);
    }

    public void setcomboDatabasesActivity(boolean enabled) {
        comboUseDatabase.setEnabled(enabled);
    }

    public void setcomboTablesActivity(boolean enabled) {
        comboUseTable.setEnabled(enabled);
    }

    public void setcomboFieldsActivity(boolean enabled) {
        comboFieldsInTheTable.setEnabled(enabled);
    }

    public String getCurrentTable() {
        return (String) tablesModel.getSelectedItem();
    }

    private final DefaultComboBoxModel<String> databasesModel;
    private final DefaultComboBoxModel<String> tablesModel;
    private final DefaultComboBoxModel<String> fieldsModel;
    private final DefaultListModel<String> propertiesModel;

    /**
     * Creates new form ControlPanel
     */
    public Panel01Control() {
        System.out.println("Panel01 ControlPanel()");
        this.databasesModel = new DefaultComboBoxModel<>();
        this.tablesModel = new DefaultComboBoxModel<>();
        this.fieldsModel = new DefaultComboBoxModel<>();
        this.propertiesModel = new DefaultListModel<>();
        initComponents();
        super.setPreferredSize(new Dimension(CONTROL_WIDTH, CONTROL_HEIGHT));
        lblControlTitle.setText(CONTROL_TITLE);
        comboUseDatabase.setModel(databasesModel);
        comboUseTable.setModel(tablesModel);
        comboFieldsInTheTable.setModel(fieldsModel);
        lstFieldProperties.setModel(propertiesModel);
    }

    public void initDatabasesModel() {
        databasesModel.removeAllElements();
        databasesModel.addElement(CONTROL_DATABASES_TEXT);
    }

    public void setListDatabasesModel(List<String> list) {
        initDatabasesModel();
        list.forEach((str) -> {
            databasesModel.addElement(str);
        });
    }

    public void initTablesModel() {
        tablesModel.removeAllElements();
        tablesModel.addElement(CONTROL_TABLES_TEXT);
    }

    public void setListTablesModel(List<String> list) {
        initTablesModel();
        list.forEach((str) -> {
            tablesModel.addElement(str);
        });
    }

    public void initFieldsModel() {
        fieldsModel.removeAllElements();
        fieldsModel.addElement(CONTROL_FIELDS_TEXT);
    }

    public void setListFieldsModel(List<String> list) {
        initFieldsModel();
        list.forEach((line) -> {
            String[] word = line.split(REGEX_FIELDS);
            fieldsModel.addElement(word[0]);
        });
    }

    public void initPropertiesModel() {
        propertiesModel.clear();
        for (String p : fieldProperties) {
            propertiesModel.addElement(String.format(
                    fieldPropertiesFormat, p));
        }
    }

    public void setListPropertiesModel(String[] list) {
        propertiesModel.clear();
        for (int ii = 0; ii < list.length; ii++) {
            propertiesModel.addElement(String.format(
                    fieldPropertiesFormat, fieldProperties[ii]) + list[ii]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConnectAsRoot = new javax.swing.JButton();
        lblConnectionAvatar = new javax.swing.JLabel();
        btnShowConnection = new javax.swing.JButton();
        comboUseDatabase = new javax.swing.JComboBox<>();
        comboUseTable = new javax.swing.JComboBox<>();
        comboFieldsInTheTable = new javax.swing.JComboBox<>();
        lblControlTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstFieldProperties = new javax.swing.JList<>();

        btnConnectAsRoot.setText("Connect/disconnect");
        btnConnectAsRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectAsRootActionPerformed(evt);
            }
        });

        lblConnectionAvatar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConnectionAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aSource/actor1.gif"))); // NOI18N

        btnShowConnection.setText("Connection Datas");
        btnShowConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowConnectionActionPerformed(evt);
            }
        });

        comboUseDatabase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Database names", "Item 1", "Item 2", "Item 3" }));
        comboUseDatabase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboUseDatabaseItemStateChanged(evt);
            }
        });

        comboUseTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Table names", "item 1", "Item 2", "Item 3" }));
        comboUseTable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboUseTableItemStateChanged(evt);
            }
        });

        comboFieldsInTheTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Field names", "item 1", "Item 2", "Item 3" }));
        comboFieldsInTheTable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFieldsInTheTableItemStateChanged(evt);
            }
        });

        lblControlTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblControlTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblControlTitle.setText("Control title");
        lblControlTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(35, 52));

        lstFieldProperties.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        lstFieldProperties.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstFieldProperties.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstFieldProperties.setEnabled(false);
        lstFieldProperties.setVisibleRowCount(6);
        jScrollPane1.setViewportView(lstFieldProperties);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnConnectAsRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblConnectionAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShowConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboUseDatabase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboUseTable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblControlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboFieldsInTheTable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblControlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConnectAsRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(comboUseDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboUseTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboFieldsInTheTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblConnectionAvatar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(btnShowConnection)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectAsRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectAsRootActionPerformed
        c.handleButtonConnect();
    }//GEN-LAST:event_btnConnectAsRootActionPerformed

    private String comboDatabaseSelected = CONTROL_DATABASES_TEXT;
    private void comboUseDatabaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboUseDatabaseItemStateChanged
        String item = (String) evt.getItem();
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            System.out.println("comboDatabasesSelected: " + comboDatabaseSelected);
            System.out.println("item: " + item);
            if (!item.equals(comboDatabaseSelected)) {
                c.handleComboDatabases(item);
            }
        }
        comboDatabaseSelected = item;
    }//GEN-LAST:event_comboUseDatabaseItemStateChanged

    private String comboTableSelected = CONTROL_TABLES_TEXT;
    private void comboUseTableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboUseTableItemStateChanged
        String item = (String) evt.getItem();
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            System.out.println("comboTablesSelected: " + comboTableSelected);
            System.out.println("item: " + item);
            if (!item.equals(comboTableSelected)) {
                c.handleComboTables(item);
            }
        }
        comboTableSelected = item;
    }//GEN-LAST:event_comboUseTableItemStateChanged

    private String comboFieldSelected = CONTROL_FIELDS_TEXT;
    private void comboFieldsInTheTableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFieldsInTheTableItemStateChanged
        String item = (String) evt.getItem();
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            System.out.println("comboFieldsSelected: " + comboFieldSelected);
            System.out.println("item: " + item);
            if (!item.equals(comboFieldSelected)) {
                c.handleComboFields(fieldsModel.getIndexOf(evt.getItem()));
            }
        }
        comboFieldSelected = item;
    }//GEN-LAST:event_comboFieldsInTheTableItemStateChanged

    private void btnShowConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowConnectionActionPerformed
        c.maiDatabaseInfo();
    }//GEN-LAST:event_btnShowConnectionActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnectAsRoot;
    private javax.swing.JButton btnShowConnection;
    private javax.swing.JComboBox<String> comboFieldsInTheTable;
    private javax.swing.JComboBox<String> comboUseDatabase;
    private javax.swing.JComboBox<String> comboUseTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConnectionAvatar;
    private javax.swing.JLabel lblControlTitle;
    private javax.swing.JList<String> lstFieldProperties;
    // End of variables declaration//GEN-END:variables
}
