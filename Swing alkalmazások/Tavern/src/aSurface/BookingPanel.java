package aSurface;

import aBasis.Alcohol;
import aBasis.Drink;
import aControl.Control;
import java.awt.Component;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author KissJGabi
 */
public class BookingPanel extends javax.swing.JPanel {

    private DefaultTableModel bookingModel = new DefaultTableModel();
    private int income;

    private Control control;

    public void setControl(Control c) {
        this.control = c;
    }

    public BookingPanel() {
        initComponents();
        tblBooking.setShowGrid(true);
        bookingModel = (DefaultTableModel) tblBooking.getModel();
        DecimalFormat df = new DecimalFormat("#0.0");
        TableCellRenderer dblCells = new NumberRenderer(df);
        TableColumnModel m = tblBooking.getColumnModel();
        m.getColumn(3).setCellRenderer(dblCells);
        m.getColumn(4).setCellRenderer(dblCells);
    }

    public void bookingTable(List<Drink> list) {
        income = 0;
        //A. változat
        Drink drink;
        for (int ii = 0; ii < list.size(); ii++) {
            drink = list.get(ii);
            bookingModel.setValueAt(drink.getNAME(), ii, 0);
            if (list.get(ii) instanceof Alcohol) {
                bookingModel.setValueAt(((Alcohol) drink).getBRAND(), ii, 1);
            } else {
                bookingModel.setValueAt("", ii, 1);
            }
            bookingModel.setValueAt(drink.getCODE(), ii, 2);
            bookingModel.setValueAt(drink.bookingVolume(), ii, 3);
            bookingModel.setValueAt(drink.bookingPrice(), ii, 4);
            income += drink.bookingPrice();
        }
        //
        income = 0;
        //B. változat
        int n = this.bookingModel.getRowCount();
        for (int ii = n - 1; ii >= 0; ii--) {
            this.bookingModel.removeRow(ii);
        }//a törlés föntről indul!!
        String brand;
        for (Drink d : list) {
            brand = (d instanceof Alcohol)
                    ? ((Alcohol) d).getBRAND() : "";
            Object[] tableRow = {d.getNAME(), brand, d.getCODE(),
                d.bookingVolume(), d.bookingPrice()};
            this.bookingModel.addRow(tableRow);
            income += d.bookingPrice();
        }
        //
        lblSumIncome.setText("A teljes bevétel: " + income + " Ft");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblSumIncome = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBooking = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Összesítés");

        lblSumIncome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSumIncome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSumIncome.setText("A teljes bevétel: 0 Ft.");

        tblBooking.setAutoCreateRowSorter(true);
        tblBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Italfajta", "Márka", "Vonalkód", "Eladott dl", "Bevétel (Ft)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBooking.setMaximumSize(new java.awt.Dimension(630, 254));
        tblBooking.setMinimumSize(new java.awt.Dimension(630, 254));
        tblBooking.setPreferredSize(new java.awt.Dimension(630, 254));
        tblBooking.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblBooking);
        if (tblBooking.getColumnModel().getColumnCount() > 0) {
            tblBooking.getColumnModel().getColumn(0).setResizable(false);
            tblBooking.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblBooking.getColumnModel().getColumn(1).setResizable(false);
            tblBooking.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblBooking.getColumnModel().getColumn(2).setResizable(false);
            tblBooking.getColumnModel().getColumn(2).setPreferredWidth(30);
            tblBooking.getColumnModel().getColumn(3).setResizable(false);
            tblBooking.getColumnModel().getColumn(3).setPreferredWidth(50);
            tblBooking.getColumnModel().getColumn(4).setResizable(false);
            tblBooking.getColumnModel().getColumn(4).setPreferredWidth(70);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSumIncome, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addComponent(lblSumIncome)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSumIncome;
    private javax.swing.JTable tblBooking;
    // End of variables declaration//GEN-END:variables
}
