/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package surface;

import basis.Match;
import control.Control;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KissJGabi
 */
public class ViewedMatchesPanel extends javax.swing.JPanel {

    private Control control;
    private DefaultTableModel tableModel;

    /**
     * Creates new form ViewedMatchesPanel
     */
    public ViewedMatchesPanel() {
        initComponents();
        tblMatches.setShowGrid(true);
        tableModel = (DefaultTableModel) tblMatches.getModel();
    }

    public void setControl(Control c) {
        this.control = c;
    }

    public void insertMatch(Match match) {
        Object[] tableLine = {match.getTEAM1(), match.getTEAM2(),
            match.matchLength(), match.getQuality(), match.getAudience()};
        tableModel.addRow(tableLine);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMatches = new javax.swing.JTable();
        btnWriteToFile = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Megnézett mérkőzések");
        jLabel1.setMaximumSize(new java.awt.Dimension(700, 64));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel1.setPreferredSize(new java.awt.Dimension(700, 64));

        jScrollPane1.setMaximumSize(new java.awt.Dimension(700, 320));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(700, 320));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(700, 320));

        tblMatches.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblMatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "1. csapat", "2. csapat", "Játékidő (perc)", "Minőség", "Nézőszám"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMatches.setMaximumSize(new java.awt.Dimension(700, 320));
        tblMatches.setMinimumSize(new java.awt.Dimension(700, 320));
        tblMatches.setPreferredSize(new java.awt.Dimension(700, 320));
        jScrollPane1.setViewportView(tblMatches);

        btnWriteToFile.setText("Kiírás fájlba");
        btnWriteToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteToFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(btnWriteToFile)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnWriteToFile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnWriteToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteToFileActionPerformed
        JFileChooser fileChooser = new JFileChooser(new File("."));
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File file = fileChooser.getSelectedFile();
                if (file.exists()) {
                    if (JOptionPane.showConfirmDialog(null,
                            "a fájl már létezik, felülírjam",
                            "hibaüzenet", JOptionPane.YES_NO_OPTION)
                            == JOptionPane.YES_OPTION) {
                        control.writeToFile(file);
                    }
                } else {
                    control.writeToFile(file);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnWriteToFileActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnWriteToFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMatches;
    // End of variables declaration//GEN-END:variables
}
