package surface;

import java.io.InputStream;
import java.util.Scanner;
import javax.swing.event.*;

/**
 *
 * @author KissJGabi
 */
public class RegulationPanel extends javax.swing.JPanel {

    private static final String CHAR_SET = "UTF-8";
    private boolean isScanned;

    public RegulationPanel() {
        initComponents();
        txtRegulation.setEditable(false);
        addRegulationTxt();
    }

    private void addRegulationTxt() {
        if (!isScanned) {
            try (InputStream ins
                    = getClass().getResourceAsStream("/datas/szabalyzat.txt");
                    Scanner sc = new Scanner(ins, CHAR_SET)) {
                String line;
                while (sc.hasNextLine()) {
                    line = sc.nextLine() + "\n";
                    txtRegulation.append(line);
                }
                txtRegulation.setCaretPosition(0);
                isScanned = true;
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    public void addListener() {
        this.addAncestorListener(new AncestorListener() {
            @Override
            public void ancestorAdded(AncestorEvent event) {
                throw new UnsupportedOperationException("Not supported yet.");
            }

            @Override
            public void ancestorRemoved(AncestorEvent event) {
                throw new UnsupportedOperationException("Not supported yet.");
            }

            @Override
            public void ancestorMoved(AncestorEvent event) {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtRegulation = new javax.swing.JTextArea();
        imagePanel1 = new surface.ImagePanel();

        setPreferredSize(new java.awt.Dimension(800, 500));
        setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(123, 150));

        txtRegulation.setColumns(20);
        txtRegulation.setFont(new java.awt.Font("Times New Roman", 0, 10)); // NOI18N
        txtRegulation.setRows(5);
        jScrollPane1.setViewportView(txtRegulation);

        add(jScrollPane1, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        add(imagePanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private surface.ImagePanel imagePanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtRegulation;
    // End of variables declaration//GEN-END:variables
}
